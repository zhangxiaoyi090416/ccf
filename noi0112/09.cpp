// 描述
//     给定m行n列的图像各像素点灰度值，对其依次进行一系列操作后，求最终图像。
//     其中，可能的操作及对应字符有如下四种：
//     A：顺时针旋转90度；
//     B：逆时针旋转90度；
//     C：左右翻转；
//     D：上下翻转。
// 输入
//     第一行包含两个正整数m和n，表示图像的行数和列数，中间用单个空格隔开。1 <= m <= 100, 1 <= n <= 100。
//     接下来m行，每行n个整数，表示图像中每个像素点的灰度值，相邻两个数之间用单个空格隔开。灰度值范围在0到255之间。
//     接下来一行，包含由A、B、C、D组成的字符串s，表示需要按顺序执行的操作序列。s的长度在1到100之间。
// 输出
//     m行，每行包含n个整数，为最终图像各像素点的灰度值。其中m为最终图像的行数，n为最终图像的列数。相邻两个整数之间用单个空格隔开。
// 样例输入
//     2 3
//     10 0 10
//     100 100 10
//     AC
// 样例输出
//     10 100
//     0 100
//     10 10

#include <iostream>

using namespace std;

int matrix[100][100];

void a()
{
}

int main()
{
    int m, n;
    string cmd;

    cin >> m >> n;

    for (auto y = 0; y < m; y++)
    {
        for (auto x = 0; x < n; x++)
        {
            int v;

            cin >> v;
            matrix[y][x] = v;
        }
    }

    cin >> cmd;

    for (auto c : cmd)
    {
        switch (c)
        {
        case 'A':
            a();
            break;

        default:
            break;
        }
    }
}